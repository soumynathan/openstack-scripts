#Sample ``localrc`` for user-configurable variables in ``stack.sh``

# NOTE: Copy this file to the root ``devstack`` directory for it to
# work properly.

# ``localrc`` is a user-maintained setings file that is sourced from ``stackrc``.
# This gives it the ability to override any variables set in ``stackrc``.
# Also, most of the settings in ``stack.sh`` are written to only be set if no
# value has already been set; this lets ``localrc`` effectively override the
# default values.

# This is a collection of some of the settings we have found to be useful
# in our DevStack development environments. Additional settings are described
# in http://devstack.org/localrc.html
# These should be considered as samples and are unsupported DevStack code.


# Minimal Contents
# ----------------

# While ``stack.sh`` is happy to run without ``localrc``, devlife is better when
# there are a few minimal variables set:

# If the ``*_PASSWORD`` variables are not set here you will be prompted to enter
# values for them by ``stack.sh`` and they will be added to ``localrc``.


# SWAMI update
HOST_IP=192.168.15.145
#FLAT_INTERFACE=eth1
FLOATING_RANGE=192.168.99.0/24
MULTI_HOST=1
ADMIN_PASSWORD=ccdemo11
MYSQL_PASSWORD=ccdemo11
RABBIT_PASSWORD=ccdemo11
SERVICE_PASSWORD=ccdemo11
SERVICE_TOKEN=ccdemo11
DATA_IP=192.168.129.134
ENABLE_TENANT_VLANS=True
Q_USE_NAMESPACE=True
Q_DEL_NAMESPACE=True
Q_USE_SECGROUP=True
PHYSICAL_NETWORK=default
OVS_PHYSICAL_BRIDGE=br-eth1
#OVS_BRIDGE_MAPPINGS=default:br-eth1,exnet:br-ex
Q_AGENT=openvswitch
Q_PLUGIN=ml2
Q_ML2_PLUGIN_VLAN_TYPE_OPTIONS=(network_vlan_ranges=default:600:700)
#Q_ML2_PLUGIN_MECHANISM_DRIVER=openvswitch,l2population
Q_FLOATING_ALLOCATION_POOL=start=192.168.99.100,end=192.168.99.254
PUBLIC_NETWORK_GATEWAY=192.168.99.99
KEYSTONE_CATALOG_BACKEND=sql
#RECLONE=yes
OFFLINE=True
#IP_VERSION=4+6
Q_DVR_MODE=dvr_snat
disable_service n-net
#disable_service n-cpu
enable_service q-svc
enable_service q-agt
enable_service q-dhcp
enable_service q-l3
enable_service neutron
enable_service tempest
enable_service q-meta 
enable_service q-lbaas
enable_service q-vpn
enable_service q-fwaas
Q_SERVICE_PLUGINS=neutron.services.loadbalancer.plugin.LoadBalancerPlugin
Q_SERVICE_PLUGINS=neutron.services.firewall.fwaas_plugin.FirewallPlugin
Q_SERVICE_PLUGINS=neutron.services.vpn.plugin.VPNDriverPlugin

#SCHEDULER=nova.scheduler.simple.SimpleScheduler
SCREEN_LOGDIR=$DEST/logs/screen
# ``HOST_IP`` should be set manually for best results if the NIC configuration
# of the host is unusual, i.e. ``eth1`` has the default route but ``eth0`` is the
# public interface.  It is auto-detected in ``stack.sh`` but often is indeterminate
# on later runs due to the IP moving from an Ethernet interface to a bridge on
# the host. Setting it here also makes it available for ``openrc`` to include
# when setting ``OS_AUTH_URL``.
# ``HOST_IP`` is not set by default.

LOG=True


# Logging
# -------

# By default ``stack.sh`` output only goes to the terminal where it runs.  It can
# be configured to additionally log to a file by setting ``LOGFILE`` to the full
# path of the destination log file.  A timestamp will be appended to the given name.
LOGFILE=devstack.log

# Old log files are automatically removed after 7 days to keep things neat.  Change
# the number of days by setting ``LOGDAYS``.
LOGDAYS=2

# Nova logs will be colorized if ``SYSLOG`` is not set; turn this off by setting
# ``LOG_COLOR`` false.
#LOG_COLOR=False

#[[post-config|/$Q_PLUGIN_CONF_FILE]]
#[ovs]
#local_ip=$DATA_IP
# Using milestone-proposed branches
# ---------------------------------

# Uncomment these to grab the milestone-proposed branches from the repos:

# Swift
# -----

# Swift is now used as the back-end for the S3-like object store. If Nova's
# objectstore (``n-obj`` in ``ENABLED_SERVICES``) is enabled, it will NOT
# run if Swift is enabled. Setting the hash value is required and you will
# be prompted for it if Swift is enabled so just set it to something already:

# For development purposes the default of 3 replicas is usually not required.
# Set this to 1 to save some resources:

# The data for Swift is stored in the source tree by default (``$DEST/swift/data``)
# and can be moved by setting ``SWIFT_DATA_DIR``. The directory will be created
# if it does not exist.
